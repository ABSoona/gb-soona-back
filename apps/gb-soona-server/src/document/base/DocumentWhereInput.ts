/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AideWhereUniqueInput } from "../../aide/base/AideWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { ContactWhereUniqueInput } from "../../contact/base/ContactWhereUniqueInput";
import { JsonFilter } from "../../util/JsonFilter";
import { DemandeWhereUniqueInput } from "../../demande/base/DemandeWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { TypeDocumentWhereUniqueInput } from "../../typeDocument/base/TypeDocumentWhereUniqueInput";
import { VersementWhereUniqueInput } from "../../versement/base/VersementWhereUniqueInput";
import { VisiteWhereUniqueInput } from "../../visite/base/VisiteWhereUniqueInput";

@InputType()
class DocumentWhereInput {
  @ApiProperty({
    required: false,
    type: () => AideWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AideWhereUniqueInput)
  @IsOptional()
  @Field(() => AideWhereUniqueInput, {
    nullable: true,
  })
  aide?: AideWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ContactWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ContactWhereUniqueInput)
  @IsOptional()
  @Field(() => ContactWhereUniqueInput, {
    nullable: true,
  })
  contact?: ContactWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  contenu?: JsonFilter;

  @ApiProperty({
    required: false,
    type: () => DemandeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DemandeWhereUniqueInput)
  @IsOptional()
  @Field(() => DemandeWhereUniqueInput, {
    nullable: true,
  })
  demande?: DemandeWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => TypeDocumentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TypeDocumentWhereUniqueInput)
  @IsOptional()
  @Field(() => TypeDocumentWhereUniqueInput, {
    nullable: true,
  })
  typeDocument?: TypeDocumentWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => VersementWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => VersementWhereUniqueInput)
  @IsOptional()
  @Field(() => VersementWhereUniqueInput, {
    nullable: true,
  })
  versements?: VersementWhereUniqueInput;
  @ApiProperty({
    required: false,
    type: () => VisiteWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => VisiteWhereUniqueInput)
  @IsOptional()
  @Field(() => VisiteWhereUniqueInput, {
    nullable: true,
  })
  visites?: VisiteWhereUniqueInput;
  
}

export { DocumentWhereInput as DocumentWhereInput };
