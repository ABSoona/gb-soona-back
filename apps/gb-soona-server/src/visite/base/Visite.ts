/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { User } from "../../user/base/User";
import {
  ValidateNested,
  IsDate,
  IsOptional,
  IsInt,
  IsString,
  MaxLength,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { Demande } from "../../demande/base/Demande";
import { Document } from "../../document/base/Document";
import { EnumVisiteStatus } from "./EnumVisiteStatus";

@ObjectType()
class Visite {
  @ApiProperty({
    required: true,
    type: () => User,
  })
  @ValidateNested()
  @Type(() => User)
  acteur?: User;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateVisite!: Date | null;

  @ApiProperty({
    required: true,
    type: () => Demande,
  })
  @ValidateNested()
  @Type(() => Demande)
  demande?: Demande;

  @ApiProperty({
    required: false,
    type: () => Document,
  })
  @ValidateNested()
  @Type(() => Document)
  @IsOptional()
  document?: Document | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  id!: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumVisiteStatus,
  })
  @IsEnum(EnumVisiteStatus)
  @IsOptional()
  @Field(() => EnumVisiteStatus, {
    nullable: true,
  })
  status?: "Programee" | "Realisee" | "Annulee" | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Visite as Visite };
