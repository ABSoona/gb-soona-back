/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsBoolean,
} from "class-validator";
import { DemandeActivityCreateNestedManyWithoutUsersInput } from "./DemandeActivityCreateNestedManyWithoutUsersInput";
import { Type } from "class-transformer";
import { DemandeCreateNestedManyWithoutUsersInput } from "./DemandeCreateNestedManyWithoutUsersInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { UserCreateNestedManyWithoutUsersInput } from "./UserCreateNestedManyWithoutUsersInput";
import { UserWhereUniqueInput } from "./UserWhereUniqueInput";
import { UserNotificationPreferenceCreateNestedManyWithoutUsersInput } from "./UserNotificationPreferenceCreateNestedManyWithoutUsersInput";

@InputType()
class UserCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  adresseCodePostal?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  adresseRue?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  adresseVille?: string | null;

  @ApiProperty({
    required: false,
    type: () => DemandeActivityCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DemandeActivityCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DemandeActivityCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  demandeActivities?: DemandeActivityCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => DemandeCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DemandeCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DemandeCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  demandesActeurs?: DemandeCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => DemandeCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DemandeCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DemandeCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  demandesEnPropriete?: DemandeCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  hasAccess!: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  password!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  role?: string | null;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  roles!: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  status?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  subordonnes?: UserCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  superieur?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  token?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserNotificationPreferenceCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UserNotificationPreferenceCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UserNotificationPreferenceCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  userNotificationPreferences?: UserNotificationPreferenceCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;
}

export { UserCreateInput as UserCreateInput };
