/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsBoolean,
} from "class-validator";
import { DemandeActivityUpdateManyWithoutUsersInput } from "./DemandeActivityUpdateManyWithoutUsersInput";
import { Type } from "class-transformer";
import { DemandeUpdateManyWithoutUsersInput } from "./DemandeUpdateManyWithoutUsersInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { UserUpdateManyWithoutUsersInput } from "./UserUpdateManyWithoutUsersInput";
import { UserWhereUniqueInput } from "./UserWhereUniqueInput";
import { UserNotificationPreferenceUpdateManyWithoutUsersInput } from "./UserNotificationPreferenceUpdateManyWithoutUsersInput";

@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  adresseCodePostal?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  adresseRue?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  adresseVille?: string | null;

  @ApiProperty({
    required: false,
    type: () => DemandeActivityUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DemandeActivityUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DemandeActivityUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  demandeActivities?: DemandeActivityUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => DemandeUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DemandeUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DemandeUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  demandesActeurs?: DemandeUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => DemandeUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DemandeUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DemandeUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  demandesEnPropriete?: DemandeUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  hasAccess?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  role?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  roles?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  status?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  subordonnes?: UserUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  superieur?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  token?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserNotificationPreferenceUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UserNotificationPreferenceUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UserNotificationPreferenceUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  userNotificationPreferences?: UserNotificationPreferenceUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;
}

export { UserUpdateInput as UserUpdateInput };
