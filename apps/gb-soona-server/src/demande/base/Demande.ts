/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsInt,
  Max,
  IsEnum,
  IsDate,
} from "class-validator";

import { Aide } from "../../aide/base/Aide";
import { Type } from "class-transformer";
import { EnumDemandeCategorieDemandeur } from "./EnumDemandeCategorieDemandeur";
import { Contact } from "../../contact/base/Contact";
import { DemandeActivity } from "../../demandeActivity/base/DemandeActivity";
import { DemandeStatusHistory } from "../../demandeStatusHistory/base/DemandeStatusHistory";
import { Document } from "../../document/base/Document";

@ObjectType()
class Demande {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  agesEnfants!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Aide],
  })
  @ValidateNested()
  @Type(() => Aide)
  @IsOptional()
  aides?: Array<Aide>;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  apl!: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(2560)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  autresAides!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  autresCharges!: number | null;

  @ApiProperty({
    required: false,
    enum: EnumDemandeCategorieDemandeur,
  })
  @IsEnum(EnumDemandeCategorieDemandeur)
  @IsOptional()
  @Field(() => EnumDemandeCategorieDemandeur, {
    nullable: true,
  })
  categorieDemandeur?: "LourdementEndett" | "NCessiteux" | "Pauvre" | null;

  @ApiProperty({
    required: true,
    type: () => Contact,
  })
  @ValidateNested()
  @Type(() => Contact)
  contact?: Contact;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdAt!: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateVisite!: Date | null;

  @ApiProperty({
    required: false,
    type: () => [DemandeActivity],
  })
  @ValidateNested()
  @Type(() => DemandeActivity)
  @IsOptional()
  demandeActivities?: Array<DemandeActivity>;

  @ApiProperty({
    required: false,
    type: () => [DemandeStatusHistory],
  })
  @ValidateNested()
  @Type(() => DemandeStatusHistory)
  @IsOptional()
  demandeStatusHistories?: Array<DemandeStatusHistory>;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  dettes!: number | null;

  @ApiProperty({
    required: false,
    type: () => [Document],
  })
  @ValidateNested()
  @Type(() => Document)
  @IsOptional()
  documents?: Array<Document>;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  facturesEnergie!: number | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  id!: number;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  loyer!: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(2560)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  natureDettes!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  nombreEnfants!: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  remarques!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  revenus!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  revenusConjoint!: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  situationFamiliale!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  situationProConjoint!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  situationProfessionnelle!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  status!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Demande as Demande };
