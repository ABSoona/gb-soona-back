/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ContactWhereUniqueInput } from "../../contact/base/ContactWhereUniqueInput";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { EnumAideCrediteur } from "./EnumAideCrediteur";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { DemandeWhereUniqueInput } from "../../demande/base/DemandeWhereUniqueInput";
import { DemandeActivityListRelationFilter } from "../../demandeActivity/base/DemandeActivityListRelationFilter";
import { EnumAideFrequence } from "./EnumAideFrequence";
import { IntFilter } from "../../util/IntFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { BooleanFilter } from "../../util/BooleanFilter";
import { EnumAideStatus } from "./EnumAideStatus";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { EnumAideTypeField } from "./EnumAideTypeField";

@InputType()
class AideWhereInput {
  @ApiProperty({
    required: false,
    type: () => ContactWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ContactWhereUniqueInput)
  @IsOptional()
  @Field(() => ContactWhereUniqueInput, {
    nullable: true,
  })
  contact?: ContactWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  createdAt?: DateTimeFilter;

  @ApiProperty({
    required: false,
    enum: EnumAideCrediteur,
  })
  @IsEnum(EnumAideCrediteur)
  @IsOptional()
  @Field(() => EnumAideCrediteur, {
    nullable: true,
  })
  crediteur?: "LeBNFiciaire" | "UnCrAncier";

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  dateAide?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  dateExpiration?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => DemandeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DemandeWhereUniqueInput)
  @IsOptional()
  @Field(() => DemandeWhereUniqueInput, {
    nullable: true,
  })
  demande?: DemandeWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => DemandeActivityListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DemandeActivityListRelationFilter)
  @IsOptional()
  @Field(() => DemandeActivityListRelationFilter, {
    nullable: true,
  })
  demandeActivities?: DemandeActivityListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumAideFrequence,
  })
  @IsEnum(EnumAideFrequence)
  @IsOptional()
  @Field(() => EnumAideFrequence, {
    nullable: true,
  })
  frequence?:
    | "Mensuelle"
    | "BiMensuelle"
    | "Trimestrielle"
    | "Hebdomadaire"
    | "Unefois";

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  id?: IntFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  infosCrediteur?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  montant?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  nombreVersements?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanFilter,
  })
  @Type(() => BooleanFilter)
  @IsOptional()
  @Field(() => BooleanFilter, {
    nullable: true,
  })
  reetudier?: BooleanFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  remarque?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumAideStatus,
  })
  @IsEnum(EnumAideStatus)
  @IsOptional()
  @Field(() => EnumAideStatus, {
    nullable: true,
  })
  status?: "EnCours" | "Expir";

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  suspendue?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumAideTypeField,
  })
  @IsEnum(EnumAideTypeField)
  @IsOptional()
  @Field(() => EnumAideTypeField, {
    nullable: true,
  })
  typeField?: "AssistanceAdministrative" | "FinanciRe";

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  updatedAt?: DateTimeFilter;
}

export { AideWhereInput as AideWhereInput };
