/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsInt,
  Max,
  ValidateNested,
  IsDate,
} from "class-validator";
import { AideCreateNestedManyWithoutContactsInput } from "./AideCreateNestedManyWithoutContactsInput";
import { Type } from "class-transformer";
import { DemandeCreateNestedManyWithoutContactsInput } from "./DemandeCreateNestedManyWithoutContactsInput";
import { DocumentCreateNestedManyWithoutContactsInput } from "./DocumentCreateNestedManyWithoutContactsInput";

@InputType()
class ContactCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  adresse?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  age?: number | null;

  @ApiProperty({
    required: false,
    type: () => AideCreateNestedManyWithoutContactsInput,
  })
  @ValidateNested()
  @Type(() => AideCreateNestedManyWithoutContactsInput)
  @IsOptional()
  @Field(() => AideCreateNestedManyWithoutContactsInput, {
    nullable: true,
  })
  aides?: AideCreateNestedManyWithoutContactsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  codePostal?: number | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateCreation?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateVisite?: Date | null;

  @ApiProperty({
    required: false,
    type: () => DemandeCreateNestedManyWithoutContactsInput,
  })
  @ValidateNested()
  @Type(() => DemandeCreateNestedManyWithoutContactsInput)
  @IsOptional()
  @Field(() => DemandeCreateNestedManyWithoutContactsInput, {
    nullable: true,
  })
  demandes?: DemandeCreateNestedManyWithoutContactsInput;

  @ApiProperty({
    required: false,
    type: () => DocumentCreateNestedManyWithoutContactsInput,
  })
  @ValidateNested()
  @Type(() => DocumentCreateNestedManyWithoutContactsInput)
  @IsOptional()
  @Field(() => DocumentCreateNestedManyWithoutContactsInput, {
    nullable: true,
  })
  documents?: DocumentCreateNestedManyWithoutContactsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nom?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  numBeneficiaire?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  prenom?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  remarques?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  status?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  telephone?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ville?: string | null;
}

export { ContactCreateInput as ContactCreateInput };
