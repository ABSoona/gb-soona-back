/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  DemandeStatusHistory as PrismaDemandeStatusHistory,
  Demande as PrismaDemande,
} from "@prisma/client";

export class DemandeStatusHistoryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DemandeStatusHistoryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.demandeStatusHistory.count(args);
  }

  async demandeStatusHistories(
    args: Prisma.DemandeStatusHistoryFindManyArgs
  ): Promise<PrismaDemandeStatusHistory[]> {
    return this.prisma.demandeStatusHistory.findMany(args);
  }
  async demandeStatusHistory(
    args: Prisma.DemandeStatusHistoryFindUniqueArgs
  ): Promise<PrismaDemandeStatusHistory | null> {
    return this.prisma.demandeStatusHistory.findUnique(args);
  }
  async createDemandeStatusHistory(
    args: Prisma.DemandeStatusHistoryCreateArgs
  ): Promise<PrismaDemandeStatusHistory> {
    return this.prisma.demandeStatusHistory.create(args);
  }
  async updateDemandeStatusHistory(
    args: Prisma.DemandeStatusHistoryUpdateArgs
  ): Promise<PrismaDemandeStatusHistory> {
    return this.prisma.demandeStatusHistory.update(args);
  }
  async deleteDemandeStatusHistory(
    args: Prisma.DemandeStatusHistoryDeleteArgs
  ): Promise<PrismaDemandeStatusHistory> {
    return this.prisma.demandeStatusHistory.delete(args);
  }

  async getDemande(parentId: number): Promise<PrismaDemande | null> {
    return this.prisma.demandeStatusHistory
      .findUnique({
        where: { id: parentId },
      })
      .demande();
  }
}
